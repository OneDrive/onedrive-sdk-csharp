// ------------------------------------------------------------------------------
//  Copyright (c) 2015 Microsoft Corporation
//  
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//  
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
//  
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//  THE SOFTWARE.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.


namespace Microsoft.OneDrive.Sdk
{
    using System;
    using System.Collections.Generic;

    /// <summary>
    /// The type  ItemRequestBuilder.
    /// </summary>
    public partial class ItemRequestBuilder : BaseRequestBuilder, IItemRequestBuilder
    {
        /// <summary>
        /// Constructs a new ItemRequestBuilder.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="IBaseClient"/> for handling requests.</param>
        public ItemRequestBuilder(
            string requestUrl,
            IBaseClient client)
            : base(requestUrl, client)
        {
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        public IItemRequest Request()
        {
            return this.Request(null);
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        public IItemRequest Request(IList<Option> options)
        {
            return new ItemRequest(this.RequestUrl, this.Client, options);
        }

    
        /// <summary>
        /// Gets the request builder for RemoteItem.
        /// </summary>
        /// <returns>The <see cref="IItemRequestBuilder"/>.</returns>
        public IItemRequestBuilder RemoteItem
        {
            get
            {
                return new ItemRequestBuilder(this.AppendSegmentToRequestUrl("remoteItem"), this.Client);
            }
        }
    
        /// <summary>
        /// Gets the request builder for Permissions.
        /// </summary>
        /// <returns>The <see cref="IPermissionsCollectionRequestBuilder"/>.</returns>
        public IPermissionsCollectionRequestBuilder Permissions
        {
            get
            {
                return new PermissionsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("permissions"), this.Client);
            }
        }
    
        /// <summary>
        /// Gets the request builder for Versions.
        /// </summary>
        /// <returns>The <see cref="IVersionsCollectionRequestBuilder"/>.</returns>
        public IVersionsCollectionRequestBuilder Versions
        {
            get
            {
                return new VersionsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("versions"), this.Client);
            }
        }
    
        /// <summary>
        /// Gets the request builder for Children.
        /// </summary>
        /// <returns>The <see cref="IChildrenCollectionRequestBuilder"/>.</returns>
        public IChildrenCollectionRequestBuilder Children
        {
            get
            {
                return new ChildrenCollectionRequestBuilder(this.AppendSegmentToRequestUrl("children"), this.Client);
            }
        }
    
        /// <summary>
        /// Gets the request builder for Thumbnails.
        /// </summary>
        /// <returns>The <see cref="IThumbnailsCollectionRequestBuilder"/>.</returns>
        public IThumbnailsCollectionRequestBuilder Thumbnails
        {
            get
            {
                return new ThumbnailsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("thumbnails"), this.Client);
            }
        }
    
        /// <summary>
        /// Gets the request builder for Content.
        /// </summary>
        /// <returns>The <see cref="IItemContentRequestBuilder"/>.</returns>
        public IItemContentRequestBuilder Content
        {
            get
            {
                return new ItemContentRequestBuilder(this.AppendSegmentToRequestUrl("content"), this.Client);
            }
        }
    
        /// <summary>
        /// Gets the request builder for ItemCreateSession.
        /// </summary>
        /// <returns>The <see cref="IItemCreateSessionRequestBuilder"/>.</returns>
        public IItemCreateSessionRequestBuilder CreateSession(
            ChunkedUploadSessionDescriptor item)
        {
            return new ItemCreateSessionRequestBuilder(
                this.AppendSegmentToRequestUrl("upload.createSession"),
                this.Client,
                item);
        }
    
        /// <summary>
        /// Gets the request builder for ItemCopy.
        /// </summary>
        /// <returns>The <see cref="IItemCopyRequestBuilder"/>.</returns>
        public IItemCopyRequestBuilder Copy(
            string name,
            ItemReference parentReference)
        {
            return new ItemCopyRequestBuilder(
                this.AppendSegmentToRequestUrl("action.copy"),
                this.Client,
                name,
                parentReference);
        }
    
        /// <summary>
        /// Gets the request builder for ItemCreateLink.
        /// </summary>
        /// <returns>The <see cref="IItemCreateLinkRequestBuilder"/>.</returns>
        public IItemCreateLinkRequestBuilder CreateLink(
            string type)
        {
            return new ItemCreateLinkRequestBuilder(
                this.AppendSegmentToRequestUrl("action.createLink"),
                this.Client,
                type);
        }
    
        /// <summary>
        /// Gets the request builder for ItemDelta.
        /// </summary>
        /// <returns>The <see cref="IItemDeltaRequestBuilder"/>.</returns>
        public IItemDeltaRequestBuilder Delta(
            string token)
        {
            return new ItemDeltaRequestBuilder(
                this.AppendSegmentToRequestUrl("view.delta"),
                this.Client,
                token);
        }
    
        /// <summary>
        /// Gets the request builder for ItemSearch.
        /// </summary>
        /// <returns>The <see cref="IItemSearchRequestBuilder"/>.</returns>
        public IItemSearchRequestBuilder Search(
            string q)
        {
            return new ItemSearchRequestBuilder(
                this.AppendSegmentToRequestUrl("view.search"),
                this.Client,
                q);
        }
    
    }
}
